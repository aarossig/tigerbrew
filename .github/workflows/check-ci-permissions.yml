name: Check permissions

on:
  workflow_call:
    outputs:
      pr_number:
        value: ${{ jobs.check_ci_permissions.outputs.pr_number }}
      head_sha:
        value: ${{ jobs.check_ci_permissions.outputs.head_sha }}
      head_ref:
        value: ${{ jobs.check_ci_permissions.outputs.head_ref }}
      repo_full_name:
        value: ${{ jobs.check_ci_permissions.outputs.repo_full_name }}
      commenter:
        value: ${{ jobs.check_ci_permissions.outputs.commenter }}

jobs:
  check_ci_permissions:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.check_perms.outputs.pr_number }}
      head_sha: ${{ steps.check_perms.outputs.head_sha }}
      head_ref: ${{ steps.check_perms.outputs.head_ref }}
      repo_full_name: ${{ steps.check_perms.outputs.repo_full_name }}
      commenter: ${{ steps.check_perms.outputs.commenter }}
    steps:
      - name: Check user permissions
        id: check_perms
        uses: actions/github-script@v7
        with:
          script: |
            const allowedAssociations = ['COLLABORATOR', 'MEMBER', 'OWNER'];
            const authorAssociation = context.payload.comment.author_association;
            if (!allowedAssociations.includes(authorAssociation)) {
              core.setFailed(`User @${context.payload.comment.user.login} with association ${authorAssociation} is not authorized to trigger CI. Requires COLLABORATOR, MEMBER, or OWNER.`);
            } else {
              console.log(`User @${context.payload.comment.user.login} is authorized (${authorAssociation}).`);
              const prNumber = context.issue.number;
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
              });
              core.setOutput('pr_number', prNumber);
              core.setOutput('head_sha', pr.head.sha);
              core.setOutput('head_ref', pr.head.ref);
              core.setOutput('repo_full_name', pr.head.repo.full_name);
              core.setOutput('commenter', context.payload.comment.user.login);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
